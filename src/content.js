// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let audioContext;
let mediaRecorder;
let audioChunks = [];
let isRecording = false;
let meetingObserver = null;
let autoTranscriptionEnabled = true;
let hasRequestedPermission = false;  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
let cachedAudioStream = null;        // –ö—ç—à–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫
let meetDetected = false;            // –§–ª–∞–≥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Google Meet
    if (window.location.href.includes('meet.google.com')) {
        console.log("üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Google Meet");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
        chrome.storage.local.get(['autoTranscription'], (result) => {
            if (result.hasOwnProperty('autoTranscription')) {
                autoTranscriptionEnabled = result.autoTranscription;
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
            if (autoTranscriptionEnabled) {
                initializeMeetDetection();
            } else {
                console.log("üìå –ê–≤—Ç–æ—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö");
            }
        });
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏
function initializeMeetDetection() {
    if (meetingObserver) {
        console.log("‚ö†Ô∏è MeetingObserver —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é");
        return;
    }
    
    console.log("üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞");
    
    // –°–æ–∑–¥–∞–µ–º MutationObserver —Å –¥–µ–±–∞—É–Ω—Å–∏–Ω–≥–æ–º –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π
    let debounceTimeout = null;
    
    meetingObserver = new MutationObserver((mutations) => {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —á–∞—Å—Ç—ã–µ –≤—ã–∑–æ–≤—ã —Å –ø–æ–º–æ—â—å—é debounce
        if (debounceTimeout) clearTimeout(debounceTimeout);
        
        debounceTimeout = setTimeout(() => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ—â–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –∑–≤–æ–Ω–æ–∫
            if (!meetDetected) {
                checkForActiveMeeting();
            }
        }, 1000); // –ó–∞–¥–µ—Ä–∂–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞
    });
    
    // –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ DOM
    meetingObserver.observe(document.body, { childList: true, subtree: true });
    
    // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ, –º—ã —É–∂–µ –≤ –∑–≤–æ–Ω–∫–µ)
    checkForActiveMeeting();
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('beforeunload', () => {
        cleanupResources();
    });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏
function checkForActiveMeeting() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞
    const callStarted = 
        document.querySelector('[data-call-started]') || 
        document.querySelector('[data-meeting-active]') ||
        document.querySelectorAll('video').length > 0 ||
        document.querySelector('.r6xAKc') !== null;
    
    // –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –∑–≤–æ–Ω–æ–∫ –∏ –∞–≤—Ç–æ—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞
    if (callStarted && !meetDetected && autoTranscriptionEnabled && !isRecording && !hasRequestedPermission) {
        meetDetected = true;
        console.log("üéâ –û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –≤ Google Meet");
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        const meetingNameElement = document.querySelector('[data-meeting-title]') || 
                                 document.querySelector('.r6xAKc');
        if (meetingNameElement) {
            window.meetingName = meetingNameElement.textContent.trim();
            console.log(`üìù –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏: ${window.meetingName}`);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–∏, –Ω–æ –ù–ï –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        showPermissionPrompt();
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å
function showPermissionPrompt() {
    console.log("üîî –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∑–∞–ø–∏—Å—å");
    
    // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const promptBox = document.createElement('div');
    promptBox.id = 'gtm-permission-prompt';
    promptBox.style.cssText = `
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        padding: 16px;
        width: 300px;
        z-index: 10000;
        font-family: 'Google Sans', Roboto, Arial, sans-serif;
    `;
    
    promptBox.innerHTML = `
        <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 12px;">
            <div style="width: 24px; height: 24px;">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#1a73e8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <line x1="12" y1="8" x2="12" y2="12"></line>
                    <line x1="12" y1="16" x2="12.01" y2="16"></line>
                </svg>
            </div>
            <div style="font-weight: 500; color: #202124; font-size: 16px;">Google Meet Transcription</div>
        </div>
        <p style="margin: 0 0 12px 0; color: #5f6368; font-size: 14px;">
            –û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –∑–≤–æ–Ω–æ–∫. –•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é?
        </p>
        <div style="display: flex; gap: 8px; justify-content: flex-end;">
            <button id="gtm-prompt-later" style="background: none; border: none; color: #5f6368; font-family: inherit; font-size: 14px; padding: 8px; cursor: pointer; border-radius: 4px;">
                –ü–æ–∑–∂–µ
            </button>
            <button id="gtm-prompt-never" style="background: none; border: none; color: #5f6368; font-family: inherit; font-size: 14px; padding: 8px; cursor: pointer; border-radius: 4px;">
                –ù–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å
            </button>
            <button id="gtm-prompt-start" style="background: #1a73e8; border: none; color: white; font-family: inherit; font-size: 14px; padding: 8px 16px; cursor: pointer; border-radius: 4px;">
                –ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å
            </button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(promptBox);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å"
    document.getElementById('gtm-prompt-start').addEventListener('click', () => {
        promptBox.remove();
        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—à–µ–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
        hasRequestedPermission = true;
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å —Å —è–≤–Ω—ã–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        startRecording();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∑–∂–µ"
    document.getElementById('gtm-prompt-later').addEventListener('click', () => {
        promptBox.remove();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å"
    document.getElementById('gtm-prompt-never').addEventListener('click', () => {
        promptBox.remove();
        disableAutoTranscription();
    });
    
    // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª
    setTimeout(() => {
        if (document.getElementById('gtm-permission-prompt')) {
            promptBox.remove();
        }
    }, 30000);
}

// –ó–∞–ø—É—Å–∫ –∑–∞–ø–∏—Å–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–æ—Ç–æ–∫–∞)
async function startRecording() {
    console.log("üéô –ó–∞–ø—É—Å–∫ –∑–∞–ø–∏—Å–∏...");
    
    if (isRecording) {
        console.log("‚ö†Ô∏è –ó–∞–ø–∏—Å—å —É–∂–µ –∏–¥–µ—Ç");
        return;
    }

    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Ç–æ–∫, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        let stream = cachedAudioStream;
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞, –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π
        if (!stream) {
            stream = await getAudioStream();
            
            if (!stream) {
                console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ–ø–æ—Ç–æ–∫");
                return;
            }
            
            // –ö—ç—à–∏—Ä—É–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            cachedAudioStream = stream;
        } else {
            console.log("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—É–¥–∏–æ–ø–æ—Ç–æ–∫");
        }

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞—É–¥–∏–æ-—á–∞–Ω–∫–∏
        audioChunks = [];
        
        // –°–æ–∑–¥–∞–µ–º MediaRecorder —Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º
        let options = { mimeType: 'audio/webm;codecs=opus' };
        
        try {
            mediaRecorder = new MediaRecorder(stream, options);
        } catch (e) {
            console.warn("‚ö†Ô∏è WebM Opus –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã");
            
            // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
            const mimeTypes = [
                'audio/webm',
                'audio/mp4',
                'audio/ogg',
                'audio/wav',
                '' // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ = –±—Ä–∞—É–∑–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            ];
            
            for (let type of mimeTypes) {
                try {
                    options = type ? { mimeType: type } : {};
                    mediaRecorder = new MediaRecorder(stream, options);
                    console.log(`‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç: ${mediaRecorder.mimeType}`);
                    break;
                } catch (e) {
                    console.warn(`‚ö†Ô∏è –§–æ—Ä–º–∞—Ç ${type} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è`);
                }
            }
        }
        
        if (!mediaRecorder) {
            console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å MediaRecorder —Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º");
            return;
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ-–¥–∞–Ω–Ω—ã—Ö
        mediaRecorder.ondataavailable = (event) => {
            if (event.data.size > 0) {
                audioChunks.push(event.data);
            }
        };

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å —Å –º–µ–Ω—å—à–∏–º–∏ —á–∞–Ω–∫–∞–º–∏ –¥–ª—è –ª—É—á—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        mediaRecorder.start(500); // 500ms —á–∞–Ω–∫–∏
        isRecording = true;
        
        console.log("‚ñ∂ –ó–∞–ø–∏—Å—å –Ω–∞—á–∞–ª–∞—Å—å! –§–æ—Ä–º–∞—Ç:", mediaRecorder.mimeType);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏
        showRecordingIndicator();
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –æ –Ω–∞—á–∞–ª–µ –∑–∞–ø–∏—Å–∏
        chrome.runtime.sendMessage({
            type: "recordingStatus",
            status: "started"
        });
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∑–∞–ø–∏—Å–∏:", error);
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ-–ø–æ—Ç–æ–∫–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
async function getAudioStream() {
    console.log("üéß –ü–µ—Ä–µ—Ö–≤–∞—Ç –∞—É–¥–∏–æ: –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø...");

    try {
        // –í–∞—Ä–∏–∞–Ω—Ç 1: –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ –∑–∞—Ö–≤–∞—Ç —ç–∫—Ä–∞–Ω–∞ (—Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–≤—É–∫–∏)
        try {
            console.log("üñ•Ô∏è –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∑–∞—Ö–≤–∞—Ç—É —ç–∫—Ä–∞–Ω–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∑–≤—É–∫–∞...");
            
            // –≠—Ç–æ—Ç API —Ç—Ä–µ–±—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
            const displayStream = await navigator.mediaDevices.getDisplayMedia({
                video: {
                    cursor: "never",
                    displaySurface: "browser"
                },
                audio: true,
                systemAudio: "include" // –Ø–≤–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –∑–≤—É–∫
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∏
            const audioTracks = displayStream.getAudioTracks();
            if (audioTracks.length > 0) {
                console.log("‚úÖ –ê—É–¥–∏–æ–ø–æ—Ç–æ–∫ –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ getDisplayMedia:", audioTracks.length, "—Ç—Ä–µ–∫–æ–≤");
                
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–µ–æ—Ç—Ä–µ–∫–∏, –Ω–∞–º –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –∑–≤—É–∫
                displayStream.getVideoTracks().forEach(track => track.stop());
                
                // –í—ã–≤–æ–¥–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                console.log("üîä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∞:", audioTracks[0].getSettings());
                
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫ —Ç–æ–ª—å–∫–æ —Å –∞—É–¥–∏–æ
                const audioStream = new MediaStream(audioTracks);
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –∞—É–¥–∏–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                window.audioSource = "system";
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                showNotification(
                    "–ó–∞–ø–∏—Å—å –∑–≤—É–∫–∞ —Å–∏—Å—Ç–µ–º—ã",
                    "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞—É–¥–∏–æ –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏)",
                    "success"
                );
                
                return audioStream;
            }
            
            // –ï—Å–ª–∏ –Ω–µ—Ç –∞—É–¥–∏–æ—Ç—Ä–µ–∫–æ–≤, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Ç—Ä–µ–∫–∏
            displayStream.getTracks().forEach(track => track.stop());
            console.log("‚ö†Ô∏è getDisplayMedia –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –∞—É–¥–∏–æ—Ç—Ä–µ–∫–∏");
        } catch (err) {
            console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ getDisplayMedia:", err.message);
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º
        }
        
        // –í–∞—Ä–∏–∞–Ω—Ç 2: –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        console.log("üé§ –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞...");
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω
        showNotification(
            "–ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω",
            "–°–∏—Å—Ç–µ–º–Ω—ã–π –∑–≤—É–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–≤—É–∫ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞",
            "warning"
        );
        
        const micStream = await navigator.mediaDevices.getUserMedia({ 
            audio: {
                echoCancellation: true,
                noiseSuppression: true,
                autoGainControl: true,
                sampleRate: 16000,
                channelCount: 1  // –ú–æ–Ω–æ –ª—É—á—à–µ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
            } 
        });
        
        const audioTracks = micStream.getAudioTracks();
        if (audioTracks.length > 0) {
            console.log("üé§ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞:", audioTracks[0].getSettings());
            window.audioSource = "microphone"; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –∞—É–¥–∏–æ
        }
        
        console.log("‚úÖ –ê—É–¥–∏–æ–ø–æ—Ç–æ–∫ –ø–æ–ª—É—á–µ–Ω —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞");
        return micStream;
    } catch (err) {
        console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ–ø–æ—Ç–æ–∫:", err);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        showNotification(
            "–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—É–¥–∏–æ", 
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞—É–¥–∏–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞.",
            "error"
        );
        
        return null;
    }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏ (—Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ–º —Ä–µ—Å—É—Ä—Å–æ–≤)
async function stopRecording() {
    console.log("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏...");

    if (!isRecording || !mediaRecorder || mediaRecorder.state === "inactive") {
        console.log("‚ö†Ô∏è –ó–∞–ø–∏—Å—å –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –Ω–µ—á–µ–≥–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å");
        return;
    }

    // –ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    isRecording = false;
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏
    hideRecordingIndicator();
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    const stopPromise = new Promise((resolve) => {
        mediaRecorder.onstop = async () => {
            try {
                if (audioChunks.length === 0) {
                    throw new Error("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏");
                }
                
                console.log(`üìä –°–æ–±—Ä–∞–Ω–æ ${audioChunks.length} –∞—É–¥–∏–æ-—á–∞–Ω–∫–æ–≤`);
                
                // –°–æ–±–∏—Ä–∞–µ–º –∞—É–¥–∏–æ-—á–∞–Ω–∫–∏ –≤ –±–ª–æ–±
                const audioBlob = new Blob(audioChunks);
                console.log("üíæ –ê—É–¥–∏–æ-—Ñ–∞–π–ª —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω:", audioBlob.size, "–±–∞–π—Ç");
                
                // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ ArrayBuffer –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                const reader = new FileReader();
                reader.readAsArrayBuffer(audioBlob);
                reader.onloadend = function() {
                    const arrayBuffer = reader.result;
                    
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã–µ –≤ background script
                    chrome.runtime.sendMessage({
                        type: "processRawAudio",
                        audioData: Array.from(new Uint8Array(arrayBuffer)),
                        meetingName: window.meetingName || "Unknown Meeting"
                    }, (response) => {
                        if (chrome.runtime.lastError) {
                            console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", chrome.runtime.lastError.message);
                            
                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                            showNotification(
                                "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏", 
                                "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—É–¥–∏–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É: " + chrome.runtime.lastError.message,
                                "error"
                            );
                        } else {
                            console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç background.js:", response);
                            
                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
                            showNotification(
                                "–ê—É–¥–∏–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", 
                                "–§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é",
                                "success"
                            );
                        }
                    });
                };
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ:", error);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                showNotification(
                    "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏", 
                    "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞—É–¥–∏–æ: " + error.message,
                    "error"
                );
            } finally {
                // –ù–ï –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ç—Ä–µ–∫–∏, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
                // –ù–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å
                resolve();
            }
        };
    });
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å
    mediaRecorder.stop();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ background script
    chrome.runtime.sendMessage({
        type: "recordingStatus",
        status: "stopped"
    });
    
    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    await stopPromise;
    console.log("‚èπ –ó–∞–ø–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É");
}

// –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function cleanupResources() {
    console.log("üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–µ—Ä–µ–¥ –≤—ã–≥—Ä—É–∑–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã");
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å, –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
    if (meetingObserver) {
        meetingObserver.disconnect();
        meetingObserver = null;
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ –æ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞
    if (isRecording && mediaRecorder && mediaRecorder.state !== "inactive") {
        try {
            mediaRecorder.stop();
        } catch (e) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–ø–∏—Å–∏:", e);
        }
    }
    
    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ç–æ–∫–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (cachedAudioStream) {
        cachedAudioStream.getTracks().forEach(track => track.stop());
        cachedAudioStream = null;
    }
}

// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤—Å—Ç—Ä–µ—á–∏
function disableAutoTranscription() {
    autoTranscriptionEnabled = false;
    hasRequestedPermission = true; // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ
    
    if (isRecording) {
        stopRecording();
    }
    
    console.log("üîï –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤—Å—Ç—Ä–µ—á–∏");
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(
        "–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞", 
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–ª—è —ç—Ç–æ–π –≤—Å—Ç—Ä–µ—á–∏",
        "info"
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–ø–∏—Å–∏
function showRecordingIndicator() {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    const existingIndicator = document.getElementById('gtm-recording-indicator');
    if (existingIndicator) {
        existingIndicator.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    const indicator = document.createElement('div');
    indicator.id = 'gtm-recording-indicator';
    indicator.style.cssText = `
        position: fixed;
        top: 8px;
        left: 8px;
        background-color: rgba(0, 0, 0, 0.7);
        color: white;
        padding: 8px 12px;
        border-radius: 16px;
        font-size: 12px;
        display: flex;
        align-items: center;
        z-index: 9999;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—É–ª—å—Å–∏—Ä—É—é—â—É—é —Ç–æ—á–∫—É –∏ —Ç–µ–∫—Å—Ç
    indicator.innerHTML = `
        <div style="
            width: 8px;
            height: 8px;
            background-color: #ea4335;
            border-radius: 50%;
            margin-right: 8px;
            animation: pulse 2s infinite;
        "></div>
        <span>–ó–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–∞</span>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(234, 67, 53, 0.7);
            }
            70% {
                box-shadow: 0 0 0 6px rgba(234, 67, 53, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(234, 67, 53, 0);
            }
        }
    `;
    document.head.appendChild(style);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(indicator);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–ø–∏—Å–∏
function hideRecordingIndicator() {
    const indicator = document.getElementById('gtm-recording-indicator');
    if (indicator) {
        indicator.remove();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(title, message, type = "info", duration = 5000) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    let notificationContainer = document.getElementById('gtm-notification-container');
    
    if (!notificationContainer) {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        notificationContainer = document.createElement('div');
        notificationContainer.id = 'gtm-notification-container';
        notificationContainer.style.cssText = `
            position: fixed;
            top: 16px;
            right: 16px;
            z-index: 9999;
            width: 320px;
        `;
        document.body.appendChild(notificationContainer);
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    let typeColor;
    let bgColor;
    switch (type) {
        case "success":
            typeColor = "#0f9d58";
            bgColor = "#e6f4ea";
            break;
        case "warning":
            typeColor = "#f4b400";
            bgColor = "#fef7e0";
            break;
        case "error":
            typeColor = "#ea4335";
            bgColor = "#fce8e6";
            break;
        default:
            typeColor = "#1a73e8";
            bgColor = "#e8f0fe";
    }
    
    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.style.cssText = `
        background-color: ${bgColor};
        border-left: 4px solid ${typeColor};
        border-radius: 4px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
        margin-bottom: 8px;
        overflow: hidden;
        animation: slideIn 0.3s ease-out;
    `;
    
    notification.innerHTML = `
        <div style="padding: 12px 16px;">
            <div style="display: flex; align-items: center; margin-bottom: 6px;">
                <div style="color: ${typeColor}; font-weight: 500; font-size: 14px;">
                    ${title}
                </div>
                <button class="close-btn" style="background: none; border: none; cursor: pointer; margin-left: auto; color: #5f6368; font-size: 14px;">
                    ‚úï
                </button>
            </div>
            <div style="color: #202124; font-size: 13px;">
                ${message}
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
        
        .slide-out {
            animation: slideOut 0.3s ease-in forwards;
        }
    `;
    document.head.appendChild(style);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    notificationContainer.appendChild(notification);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
    const closeBtn = notification.querySelector('.close-btn');
    closeBtn.addEventListener('click', () => {
        notification.classList.add('slide-out');
        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, 300);
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    setTimeout(() => {
        if (notification.parentNode) {
            notification.classList.add('slide-out');
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 300);
        }
    }, duration);
}

// –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç popup.js
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    if (message.action === "startRecording") {
        console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ 'startRecording'");
        hasRequestedPermission = true; // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –±—ã–ª –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        startRecording();
        sendResponse({ 
            status: "‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞—á–∞–ª–∞—Å—å!",
            captureType: window.audioSource || "system"
        });
    }
    else if (message.action === "stopRecording") {
        console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ 'stopRecording'");
        stopRecording();
        sendResponse({ status: "‚úÖ –ó–∞–ø–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!" });
    }
    else if (message.action === "disableAutoTranscription") {
        console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ 'disableAutoTranscription'");
        disableAutoTranscription();
        sendResponse({ status: "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞!" });
    }
    else if (message.action === "getRecordingStatus") {
        sendResponse({ 
            isRecording: isRecording,
            meetingDetected: meetDetected,
            meetingName: window.meetingName || "Unknown Meeting",
            hasRequestedPermission: hasRequestedPermission,
            audioSource: window.audioSource || "unknown"
        });
    }
    
    return true; // –í–∞–∂–Ω–æ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ sendResponse
});