// const OPENAI_API_KEY = "sk-proj-7qbsSITJhiFiuRwD-s5rlOFCqrJTfxSgJqszhwB2se_W2gsqEdvpl8I5HBlZzVuK8jL0CxVoJhT3BlbkFJbOtzeT6Oobb0MyruWEuA-PCFQWs4QRRrxgLhVSPsr74P2cpojwzUSYsWrr72_EIsZQln6VPjY"; // üîë –í—Å—Ç–∞–≤—å —Å–≤–æ–π API-–∫–ª—é—á OpenAI

chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    if (message.action === "sendAudio") {
        (async () => {
            try {
                console.log("üì© –ü–æ–ª—É—á–µ–Ω –∞—É–¥–∏–æ—Ñ–∞–π–ª, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ OpenAI Whisper...");

                const OPENAI_API_URL = "https://api.openai.com/v1/audio/transcriptions";
                const OPENAI_API_KEY = "your-api-key"; // üîë –í—Å—Ç–∞–≤—å —Å–≤–æ–π API-–∫–ª—é—á OpenAI

                const formData = new FormData();
                formData.append("file", message.audioBlob, "recording.wav");
                formData.append("model", "whisper-1");
                formData.append("language", "ru"); // –£–∫–∞–∂–∏ –Ω—É–∂–Ω—ã–π —è–∑—ã–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "ru" –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ)

                console.log("üåç –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤:", OPENAI_API_URL);

                const response = await fetch(OPENAI_API_URL, {
                    method: "POST",
                    headers: {
                        Authorization: `Bearer ${OPENAI_API_KEY}`,
                    },
                    body: formData,
                });

                const result = await response.json();
                console.log("üì• –û—Ç–≤–µ—Ç –æ—Ç Whisper:", result);

                if (response.ok) {
                    sendResponse({ status: "‚úÖ –ê—É–¥–∏–æ—Ñ–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω", transcription: result.text });
                } else {
                    console.error("‚ö† –û—à–∏–±–∫–∞ –æ—Ç OpenAI:", result);
                    sendResponse({ status: "‚ùå –û—à–∏–±–∫–∞ OpenAI", error: result });
                }
            } catch (error) {
                console.error("‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Whisper:", error);
                sendResponse({ status: "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏", error: error.message });
            }
        })();

        return true; // –í–ê–ñ–ù–û: –ì–æ–≤–æ—Ä–∏–º Chrome, —á—Ç–æ –æ—Ç–≤–µ—Ç –ø—Ä–∏–¥—ë—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
    }
});
